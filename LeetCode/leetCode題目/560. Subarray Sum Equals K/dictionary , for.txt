using System;
using System.Collections.Generic;

namespace _560._Subarray_Sum_Equals_K
{

    //Given an array of integers nums and an integer k, return the total number of subarrays whose sum equals to k.

    //Input: nums = [1,1,1], k = 2
    //Output: 2
    //https://leetcode.com/problems/subarray-sum-equals-k/
    class Program
    {
        static void Main(string[] args)
        {
            int[] a = new int[] { 1, 2, 3, 4 };
            Console.WriteLine(SubarraySum1(a, 4));
            Console.WriteLine(SubarraySum2Pro(a, 4));
            Console.WriteLine(SubarraySum3(a, 4));
            Console.WriteLine(SubarraySum4(a, 4));




            int SubarraySum1(int[] nums, int k)
            {
                int count = 0;
                for(int i = 0;i<nums.Length;i++)
                {
                    int sum = 0;
                    for(int j = i; j<nums.Length;j++)
                    {
                        sum += nums[j];
                        if (sum == k)
                            count++;
                    }
                }
                return count;
            }


            int SubarraySum4(int[] nums, int k)
            {
                //[-1,1,-1,-1,-2,0] -2
                //[-1,1,0] 0
                Dictionary<int, int> a = new Dictionary<int, int>();
                int sum = 0, count = 0;
                a[sum] = 1; //a.Add(sum,1);
                for (int i = 0; i < nums.Length; i++)
                {
                    sum += nums[i];
                    if (a.ContainsKey(sum - k))
                        count += a[sum - k];
                    _ = a.ContainsKey(sum) ? a[sum]++ : a[sum] = 1;
                }
                return count;
            }









            int SubarraySum2Pro(int[] nums, int k)
            {
                int count = 0;
                int temp = 0;
                for(int i = 0; i < nums.Length-1; i++)
                {
                    temp = nums[i];
                    if (temp == k)
                    {
                        count++;
                    }
                    for (int j = i + 1; j < nums.Length; j++)
                    {
                        temp += nums[j];
                        if (temp == k)
                        {
                            count++;
                        }
                    }
                }
                if (nums[nums.Length - 1] == k)
                {
                    count++;
                }
                return count;
            }
















            int SubarraySum3(int[] nums, int k)
            {
                int b = 0;
                int count = 0;
                for (int i = 0; i < nums.Length; i++)
                {
                    b = nums[i];
                    if (b == k)
                        count++;
                    for (int x = i + 1; x < nums.Length; x++)
                    {
                        b += nums[x];
                        if (b == k)
                            count++;
                    }
                }
                return count;
            }
        }
    }
}           
















